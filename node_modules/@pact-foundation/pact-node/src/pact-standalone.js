"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.standalone = void 0;
var path = require("path");
var install_1 = require("../standalone/install");
var pact_environment_1 = require("./pact-environment");
var standalone = function (platform, arch) {
    platform = platform || process.platform;
    arch = arch || process.arch;
    var binName = function (name) {
        return "" + name + (pact_environment_1.default.isWindows(platform) ? '.bat' : '');
    };
    var mock = binName('pact-mock-service');
    var message = binName('pact-message');
    var verify = binName('pact-provider-verifier');
    var broker = binName('pact-broker');
    var stub = binName('pact-stub-service');
    var pact = binName('pact');
    var basePath = path.join('standalone', (0, install_1.getBinaryEntry)(platform, arch).folderName, 'pact', 'bin');
    return {
        cwd: pact_environment_1.default.cwd,
        brokerPath: path.join(basePath, broker),
        brokerFullPath: path.resolve(pact_environment_1.default.cwd, basePath, broker).trim(),
        messagePath: path.join(basePath, message),
        messageFullPath: path
            .resolve(pact_environment_1.default.cwd, basePath, message)
            .trim(),
        mockServicePath: path.join(basePath, mock),
        mockServiceFullPath: path
            .resolve(pact_environment_1.default.cwd, basePath, mock)
            .trim(),
        stubPath: path.join(basePath, stub),
        stubFullPath: path.resolve(pact_environment_1.default.cwd, basePath, stub).trim(),
        pactPath: path.join(basePath, pact),
        pactFullPath: path.resolve(pact_environment_1.default.cwd, basePath, pact).trim(),
        verifierPath: path.join(basePath, verify),
        verifierFullPath: path
            .resolve(pact_environment_1.default.cwd, basePath, verify)
            .trim(),
    };
};
exports.standalone = standalone;
exports.default = (0, exports.standalone)();
//# sourceMappingURL=pact-standalone.js.map