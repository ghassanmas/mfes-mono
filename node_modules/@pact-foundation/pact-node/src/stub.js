"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Stub = void 0;
var spawn_1 = require("./spawn");
var service_1 = require("./service");
var util_1 = require("util");
var pact_standalone_1 = require("./pact-standalone");
var checkTypes = require('check-types');
var Stub = (function (_super) {
    __extends(Stub, _super);
    function Stub(options) {
        var _this = this;
        options = options || {};
        options.pactUrls = options.pactUrls || [];
        if (options.pactUrls) {
            checkTypes.assert.array.of.string(options.pactUrls);
        }
        checkTypes.assert.not.emptyArray(options.pactUrls);
        _this = _super.call(this, pact_standalone_1.default.stubFullPath, options, {
            pactUrls: spawn_1.DEFAULT_ARG,
            port: '--port',
            host: '--host',
            log: '--log',
            logLevel: '--log-level',
            ssl: '--ssl',
            sslcert: '--sslcert',
            sslkey: '--sslkey',
            cors: '--cors',
        }) || this;
        _this.options = options;
        return _this;
    }
    Stub.create = (0, util_1.deprecate)(function (options) { return new Stub(options); }, 'Create function will be removed in future release, please use the default export function or use `new Stub()`');
    return Stub;
}(service_1.AbstractService));
exports.Stub = Stub;
exports.default = (function (options) { return new Stub(options); });
//# sourceMappingURL=stub.js.map